// <auto-generated />
using CinemaGuide.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage;
using Microsoft.EntityFrameworkCore.Storage.Internal;
using System;

namespace CinemaGuide.Migrations
{
    [DbContext(typeof(ApplicationContext))]
    [Migration("20180508090337_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Npgsql:ValueGenerationStrategy", NpgsqlValueGenerationStrategy.SerialColumn)
                .HasAnnotation("ProductVersion", "2.0.2-rtm-10011");

            modelBuilder.Entity("CinemaGuide.Models.DbProfile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("Age");

                    b.Property<string>("Email");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<string>("Role")
                        .IsRequired();

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("Profiles");
                });

            modelBuilder.Entity("CinemaGuide.Models.DbUser", b =>
                {
                    b.Property<string>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("HashedPassword")
                        .IsRequired();

                    b.Property<string>("Login")
                        .IsRequired();

                    b.Property<int>("ProfileForeignKey");

                    b.Property<string>("Salt")
                        .IsRequired();

                    b.HasKey("Id");

                    b.HasIndex("ProfileForeignKey")
                        .IsUnique();

                    b.ToTable("Users");
                });

            modelBuilder.Entity("CinemaGuide.Models.DbUser", b =>
                {
                    b.HasOne("CinemaGuide.Models.DbProfile", "Profile")
                        .WithOne("User")
                        .HasForeignKey("CinemaGuide.Models.DbUser", "ProfileForeignKey")
                        .OnDelete(DeleteBehavior.Cascade);
                });
#pragma warning restore 612, 618
        }
    }
}
